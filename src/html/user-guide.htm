<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML xmlns="http://www.w3.org/TR/REC-html40" xmlns:v = 
"urn:schemas-microsoft-com:vml" xmlns:o = 
"urn:schemas-microsoft-com:office:office" xmlns:w = 
"urn:schemas-microsoft-com:office:word"><HEAD><TITLE>WS-TX User Guide e</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<META content=Word.Document name=ProgId>
<META content="MSHTML 6.00.2900.2627" name=GENERATOR>
<META content="Microsoft Word 11" name=Originator><LINK 
href="user-guide1_files/filelist.xml" rel=File-List><LINK 
href="user-guide1_files/editdata.mso" rel=Edit-Time-Data><!--[if !mso]>
<STYLE>v\:* {
	BEHAVIOR: url(#default#VML)
}
o\:* {
	BEHAVIOR: url(#default#VML)
}
w\:* {
	BEHAVIOR: url(#default#VML)
}
.shape {
	BEHAVIOR: url(#default#VML)
}
</STYLE>
<![endif]--><!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Dasarath Weeratunge</o:Author>
  <o:LastAuthor>Dasarath Weeratunge</o:LastAuthor>
  <o:Revision>12</o:Revision>
  <o:TotalTime>35</o:TotalTime>
  <o:Created>2005-04-28T04:36:00Z</o:Created>
  <o:LastSaved>2005-04-28T05:11:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>1438</o:Words>
  <o:Characters>8199</o:Characters>
  <o:Company>Lanka Software Foundation (LSF)</o:Company>
  <o:Lines>68</o:Lines>
  <o:Paragraphs>19</o:Paragraphs>
  <o:CharactersWithSpaces>9618</o:CharactersWithSpaces>
  <o:Version>11.5606</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]-->
<STYLE>@page Section1 {size: 8.5in 11.0in; margin: 1.0in 65.95pt 1.0in 65.95pt; mso-header-margin: 35.4pt; mso-footer-margin: 35.4pt; mso-paper-source: 0; }
P.MsoNormal {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 6pt; FONT-FAMILY: "Times New Roman"; mso-style-parent: ""; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
LI.MsoNormal {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 6pt; FONT-FAMILY: "Times New Roman"; mso-style-parent: ""; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
DIV.MsoNormal {
	FONT-SIZE: 12pt; MARGIN: 0in 0in 6pt; FONT-FAMILY: "Times New Roman"; mso-style-parent: ""; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"
}
H1 {
	FONT-WEIGHT: bold; FONT-SIZE: 16pt; MARGIN: 12pt 0in 3pt; FONT-FAMILY: Arial; TEXT-ALIGN: center; mso-pagination: widow-orphan; mso-style-next: Normal; mso-outline-level: 1; mso-font-kerning: 16.0pt
}
H2 {
	FONT-WEIGHT: bold; FONT-SIZE: 13pt; MARGIN: 12pt 0in 3pt; FONT-FAMILY: Arial; mso-bidi-font-size: 14.0pt; mso-pagination: widow-orphan; mso-style-next: Normal; mso-outline-level: 2; mso-bidi-font-style: italic
}
H3 {
	FONT-WEIGHT: bold; FONT-SIZE: 11pt; MARGIN: 6pt 0in; FONT-STYLE: italic; FONT-FAMILY: Arial; mso-bidi-font-size: 13.0pt; mso-pagination: widow-orphan; mso-style-next: Normal; mso-outline-level: 3; mso-bidi-font-style: normal
}
H4 {
	FONT-WEIGHT: normal; FONT-SIZE: 11pt; MARGIN: 12pt 0in 3pt; FONT-FAMILY: "Times New Roman"; TEXT-DECORATION: underline; mso-bidi-font-size: 14.0pt; mso-pagination: widow-orphan; mso-style-next: Normal; mso-outline-level: 4; mso-bidi-font-weight: bold; text-underline: single
}
A:link {
	COLOR: blue; TEXT-DECORATION: underline; text-underline: single
}
SPAN.MsoHyperlink {
	COLOR: blue; TEXT-DECORATION: underline; text-underline: single
}
A:visited {
	COLOR: purple; TEXT-DECORATION: underline; text-underline: single
}
SPAN.MsoHyperlinkFollowed {
	COLOR: purple; TEXT-DECORATION: underline; text-underline: single
}
P.MsoPlainText {
	FONT-SIZE: 9pt; MARGIN: 0in 0in 0pt; LINE-HEIGHT: 150%; FONT-FAMILY: "Courier New"; mso-bidi-font-size: 10.0pt; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"; mso-style-link: "Plain Text Char"
}
LI.MsoPlainText {
	FONT-SIZE: 9pt; MARGIN: 0in 0in 0pt; LINE-HEIGHT: 150%; FONT-FAMILY: "Courier New"; mso-bidi-font-size: 10.0pt; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"; mso-style-link: "Plain Text Char"
}
DIV.MsoPlainText {
	FONT-SIZE: 9pt; MARGIN: 0in 0in 0pt; LINE-HEIGHT: 150%; FONT-FAMILY: "Courier New"; mso-bidi-font-size: 10.0pt; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"; mso-style-link: "Plain Text Char"
}
P {
	FONT-SIZE: 12pt; MARGIN-LEFT: 0in; MARGIN-RIGHT: 0in; FONT-FAMILY: "Times New Roman"; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto
}
SPAN.PlainTextChar {
	FONT-FAMILY: "Courier New"; mso-style-link: "Plain Text"; mso-style-name: "Plain Text Char"; mso-style-locked: yes; mso-ansi-font-size: 9.0pt; mso-ascii-font-family: "Courier New"; mso-hansi-font-family: "Courier New"; mso-bidi-font-family: "Courier New"; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA
}
P.StyleCentered {
	FONT-SIZE: 12pt; MARGIN: 6pt 0in 12pt; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: center; mso-bidi-font-size: 10.0pt; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"; mso-style-name: "Style Centered"
}
LI.StyleCentered {
	FONT-SIZE: 12pt; MARGIN: 6pt 0in 12pt; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: center; mso-bidi-font-size: 10.0pt; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"; mso-style-name: "Style Centered"
}
DIV.StyleCentered {
	FONT-SIZE: 12pt; MARGIN: 6pt 0in 12pt; FONT-FAMILY: "Times New Roman"; TEXT-ALIGN: center; mso-bidi-font-size: 10.0pt; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"; mso-style-name: "Style Centered"
}
P.style3 {
	FONT-SIZE: 9pt; MARGIN-LEFT: 0in; MARGIN-RIGHT: 0in; FONT-FAMILY: "Times New Roman"; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-style-name: style3
}
LI.style3 {
	FONT-SIZE: 9pt; MARGIN-LEFT: 0in; MARGIN-RIGHT: 0in; FONT-FAMILY: "Times New Roman"; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-style-name: style3
}
DIV.style3 {
	FONT-SIZE: 9pt; MARGIN-LEFT: 0in; MARGIN-RIGHT: 0in; FONT-FAMILY: "Times New Roman"; mso-pagination: widow-orphan; mso-fareast-font-family: "Times New Roman"; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-style-name: style3
}
SPAN.plaintextcharstyle3 {
	mso-style-name: "plaintextchar style3"
}
SPAN.SpellE {
	mso-style-name: ""; mso-spl-e: yes
}
SPAN.GramE {
	mso-style-name: ""; mso-gram-e: yes
}
DIV.Section1 {
	page: Section1
}
OL {
	MARGIN-BOTTOM: 0in
}
UL {
	MARGIN-BOTTOM: 0in
}
</STYLE>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="9218"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]--></HEAD>
<BODY lang=EN-US style="tab-interval: .5in" vLink=purple link=blue>
<DIV class=Section1>
<H1>WS-TX User Guide</H1>
<H2>Purpose</H2>
<P class=MsoNormal>This tutorial provides a brief overview of the WS-TX project 
and how to try out the provided examples. For a detail illustration on the 
design, please refer to the provided architecture documentation.</P>
<H2>Objectives</H2>
<P class=MsoNormal>The WS-TX project has two main objectives:</P>
<OL style="MARGIN-TOP: 0in" type=1>
  <LI class=MsoNormal 
  style="mso-list: l4 level1 lfo1; tab-stops: list .5in">Provide an open source 
  implementation for the web services coordination and transaction management 
  frameworks defined by WS-Coordination, WS-<SPAN 
  class=SpellE>AtomicTransaction</SPAN> and WS-<SPAN 
  class=SpellE>BusinessActivity</SPAN>. 
  <LI class=MsoNormal 
  style="mso-list: l4 level1 lfo1; tab-stops: list .5in">Integrate existing open 
  source JTA implementations (e.g. JOTM, <SPAN class=SpellE>JBoss</SPAN>, 
  Geronimo, etc.) with the web services transaction management framework so that 
  J2EE web services and clients may take part in atomic transactions while using 
  JTA for transaction management. </LI></OL>
<H2>Overview</H2>
<P class=MsoNormal>Think of a hypothetical web service that provides banking 
services. The service provides 2 operations: a <SPAN class=PlainTextChar><SPAN 
style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">credit</SPAN></SPAN> 
operation and a <SPAN class=PlainTextChar><SPAN 
style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">debit</SPAN></SPAN> 
operation. Now if the two operations are to be used to perform a monetary 
transfer between two accounts, it must be ensured that either both operations 
succeed or neither does. Under these circumstances, the web services 
coordination framework can be used to ensure the atomicity of operations. The 
sample code below shows how a standalone client may use the WS-TX implementation 
in this scenario-</P>
<P class=StyleCentered><o:p>&nbsp;</o:p></P>
<P class=StyleCentered><!--[if mso & !supportInlineShapes & supportFields]><span
style='mso-element:field-begin;mso-field-lock:yes'></span><span
style='mso-spacerun:yes'> </span>SHAPE <span
style='mso-spacerun:yes'> </span>\* MERGEFORMAT <span style='mso-element:field-separator'></span><![endif]--><!--[if gte vml 1]><v:shapetype 
id=_x0000_t202 coordsize = "21600,21600" o:spt = "202" path = 
" m0,0 l0,21600,21600,21600,21600,0 xe"><v:stroke joinstyle = 
"miter"></v:stroke><v:path gradientshapeok = "t" o:connecttype = 
"rect"></v:path></v:shapetype><v:shape id=_x0000_s1028 
style="WIDTH: 440.3pt; HEIGHT: 271.5pt; mso-position-horizontal-relative: char; mso-position-vertical-relative: line" 
type = "#_x0000_t202" coordsize = "21600,21600" filled = "f"><v:textbox 
style="MARGIN-TOP: 4.718pt; LEFT: auto; MARGIN-LEFT: 8.312pt; WIDTH: 425.156pt; TOP: auto; HEIGHT: 263.562pt; mso-next-textbox: #_x0000_s1028"><![if !mso]>
<TABLE cellSpacing=0 cellPadding=0 width="100%">
  <TBODY>
  <TR>
    <TD><![endif]>
      <DIV>
      <P class=MsoPlainText><SPAN lang=FR style="mso-ansi-language: FR">import 
      org.apache.ws.transaction.participant.standalone.TransactionManager;<o:p></o:p></SPAN></P>
      <P class=MsoPlainText><SPAN lang=FR 
      style="mso-ansi-language: FR"><o:p>&nbsp;</o:p></SPAN></P>
      <P class=MsoPlainText><SPAN class=GramE>public</SPAN> class .... {</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN 
      class=GramE>public</SPAN> static void main(String[] <SPAN 
      class=SpellE>args</SPAN>) throws Exception {</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN>Bank <SPAN class=SpellE>bank</SPAN>= new <SPAN class=SpellE><SPAN 
      class=GramE>BankServiceLocator</SPAN></SPAN><SPAN 
      class=GramE>(</SPAN>).<SPAN class=SpellE>getBank</SPAN>();</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN><SPAN class=SpellE>TransactionManager</SPAN> tm= <SPAN 
      class=SpellE><SPAN 
      class=GramE>TransactionManager.getInstance</SPAN></SPAN><SPAN 
      class=GramE>(</SPAN>);</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN><SPAN class=SpellE><SPAN class=GramE>tm.begin</SPAN></SPAN><SPAN 
      class=GramE>(</SPAN>);</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN><SPAN class=GramE>try</SPAN> {</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN><SPAN class=SpellE><SPAN class=GramE>bank.credit</SPAN></SPAN><SPAN 
      class=GramE>(</SPAN>1001, 10);</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN><SPAN class=SpellE><SPAN class=GramE>bank.debit</SPAN></SPAN><SPAN 
      class=GramE>(</SPAN>1002, 10);</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN>}</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN><SPAN class=GramE>catch</SPAN> (Exception e) {</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN><SPAN class=SpellE><SPAN class=GramE>tm.rollback</SPAN></SPAN><SPAN 
      class=GramE>(</SPAN>);</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN>}</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN><SPAN class=SpellE><SPAN class=GramE>tm.commit</SPAN></SPAN><SPAN 
      class=GramE>(</SPAN>);</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}</P>
      <P class=MsoPlainText>}</P></DIV><![if !mso]></TD></TR></TBODY></TABLE><![endif]></v:textbox><w:wrap 
type = "none"></w:wrap><w:anchorlock></w:anchorlock></v:shape><![endif]--><![if !vml]><img width=593 height=368
src="user-guide1_files/image004.gif"
alt="Text Box: import org.apache.ws.transaction.participant.standalone.TransactionManager;&#13;&#10;&#13;&#10;public class .... {&#13;&#10;	public static void main(String[] args) throws Exception {&#13;&#10;		Bank bank= new BankServiceLocator().getBank();&#13;&#10;		TransactionManager tm= TransactionManager.getInstance();&#13;&#10;		tm.begin();&#13;&#10;		try {&#13;&#10;			bank.credit(1001, 10);&#13;&#10;			bank.debit(1002, 10);&#13;&#10;		}&#13;&#10;		catch (Exception e) {&#13;&#10;			tm.rollback();&#13;&#10;		}&#13;&#10;		tm.commit();&#13;&#10;	}&#13;&#10;}&#13;&#10;"
v:shapes="_x0000_s1028"><![endif]><!--[if gte vml 1]><v:shapetype id=_x0000_t75 
coordsize = "21600,21600" o:preferrelative = "t" o:spt = "75" filled = "f" 
stroked = "f" path = " m@4@5 l@4@11@9@11@9@5 xe"><v:stroke joinstyle = 
"miter"></v:stroke><v:formulas><v:f eqn = 
"if lineDrawn pixelLineWidth 0 "></v:f><v:f eqn = "sum @0 1 0 "></v:f><v:f eqn = 
"sum 0 0 @1 "></v:f><v:f eqn = "prod @2 1 2 "></v:f><v:f eqn = 
"prod @3 21600 pixelWidth "></v:f><v:f eqn = 
"prod @3 21600 pixelHeight "></v:f><v:f eqn = "sum @0 0 1 "></v:f><v:f eqn = 
"prod @6 1 2 "></v:f><v:f eqn = "prod @7 21600 pixelWidth "></v:f><v:f eqn = 
"sum @8 21600 0 "></v:f><v:f eqn = "prod @7 21600 pixelHeight "></v:f><v:f eqn = 
"sum @10 21600 0 "></v:f></v:formulas><v:path o:extrusionok = "f" 
gradientshapeok = "t" o:connecttype = "rect"></v:path><o:lock aspectratio="t" 
v:ext="edit"></o:lock></v:shapetype><![endif]--><!--[if mso & !supportInlineShapes & supportFields]><v:shape
 id="_x0000_i1025" type="#_x0000_t75" style='width:440.3pt;height:271.5pt'>
 <v:imagedata croptop="-65520f" cropbottom="65520f"/>
</v:shape><span style='mso-element:field-end'></span><![endif]--></P>
<P class=MsoNormal>The web services coordination framework describes how web 
services may join in and participate in coordinated activities. It also 
stipulates how participants may reach collective agreement on the ultimate 
outcome of such activities.</P>
<P class=MsoNormal>Though the framework is platform independent, participant 
services unavoidably need to use numerous incompatible, platform-specific 
technologies to perform transactional work. For instance, if the banking service 
mentioned above is implemented in J2EE, its implementation would use JTA 
distributed transactions necessarily. Hence in the context of coordinated 
activities, the underlying JTA runtime is required to coordinate with an 
external coordinator to decide if and when to make any work performed as part of 
such activities, persistent. The WS-TX provides this capability by integrating 
with existing transaction managers so that JTA distributed transactions started 
locally may be coordinated by an external coordinator through the web services 
coordination framework.</P>
<P class=MsoNormal>Furthermore, the WS-TX runtime is also capable of implicitly 
propagating the local transaction context of a calling thread on web service 
invocations. This allows distributed transactions to be propagated across 
heterogeneous application domains. To illustrate this point consider how the 
same use case illustrated above would be implemented by a J2EE client.</P>
<P class=StyleCentered><!--[if mso & !supportInlineShapes & supportFields]><span
style='mso-element:field-begin;mso-field-lock:yes'></span><span
style='mso-spacerun:yes'> </span>SHAPE <span style='mso-spacerun:yes'> </span>\*
MERGEFORMAT <span style='mso-element:field-separator'></span><![endif]--><!--[if gte vml 1]><v:shape 
id=_x0000_s1027 
style="WIDTH: 363.1pt; HEIGHT: 325.5pt; mso-position-horizontal-relative: char; mso-position-vertical-relative: line" 
type = "#_x0000_t202" coordsize = "21600,21600" filled = "f"><v:textbox 
style="MARGIN-TOP: 4.718pt; LEFT: auto; MARGIN-LEFT: 8.312pt; WIDTH: 347.968pt; TOP: auto; HEIGHT: 317.562pt"><![if !mso]>
<TABLE cellSpacing=0 cellPadding=0 width="100%">
  <TBODY>
  <TR>
    <TD><![endif]>
      <DIV>
      <P class=MsoPlainText><SPAN lang=FR style="mso-ansi-language: FR">public 
      class ... implements SessionBean {<o:p></o:p></SPAN></P>
      <P class=MsoPlainText><SPAN lang=FR style="mso-ansi-language: FR"><SPAN 
      style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN>private SessionContext ctx;<o:p></o:p></SPAN></P>
      <P class=MsoPlainText><SPAN lang=FR 
      style="mso-ansi-language: FR"><o:p>&nbsp;</o:p></SPAN></P>
      <P class=MsoPlainText><SPAN lang=FR style="mso-ansi-language: FR"><SPAN 
      style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN>public void setSessionContext(SessionContext ctx) 
      {<o:p></o:p></SPAN></P>
      <P class=MsoPlainText><SPAN lang=FR style="mso-ansi-language: FR"><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN></SPAN><SPAN class=SpellE>this.ctx</SPAN>= <SPAN 
      class=SpellE>ctx</SPAN>;</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}</P>
      <P class=MsoPlainText><o:p>&nbsp;</o:p></P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN 
      class=GramE>public</SPAN> ... <SPAN class=SpellE>foo</SPAN>(....) {</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN>Bank <SPAN class=SpellE>bank</SPAN>= new <SPAN class=SpellE><SPAN 
      class=GramE>BankServiceLocator</SPAN></SPAN><SPAN 
      class=GramE>(</SPAN>).<SPAN class=SpellE>getBank</SPAN>();</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN><SPAN class=SpellE>UserTransaction</SPAN> <SPAN 
      class=SpellE>ut</SPAN>= <SPAN class=SpellE><SPAN 
      class=GramE>ctx.getUserTransaction</SPAN></SPAN><SPAN 
      class=GramE>(</SPAN>);</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN><SPAN class=SpellE><SPAN class=GramE>ut.begin</SPAN></SPAN><SPAN 
      class=GramE>(</SPAN>);</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN><SPAN class=GramE>try</SPAN> {</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN><SPAN class=SpellE><SPAN class=GramE>bank.credit</SPAN></SPAN><SPAN 
      class=GramE>(</SPAN>1001, 10);</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN><SPAN class=SpellE><SPAN class=GramE>bank.debit</SPAN></SPAN><SPAN 
      class=GramE>(</SPAN>1002, 10);</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN>}</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN><SPAN class=GramE>catch</SPAN> (Exception e) {</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 3">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN><SPAN class=SpellE><SPAN class=GramE>ut.rollback</SPAN></SPAN><SPAN 
      class=GramE>(</SPAN>);</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN>}</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN><SPAN class=SpellE><SPAN class=GramE>ut.commit</SPAN></SPAN><SPAN 
      class=GramE>(</SPAN>);</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}</P>
      <P class=MsoPlainText>}</P>
      <P 
class=MsoNormal><o:p>&nbsp;</o:p></P></DIV><![if !mso]></TD></TR></TBODY></TABLE><![endif]></v:textbox><w:wrap 
side = "left" type = "none"></w:wrap><w:anchorlock></w:anchorlock></v:shape><![endif]--><![if !vml]><img width=490 height=440
src="user-guide1_files/image002.gif"
alt="Text Box: public class ... implements SessionBean {&#13;&#10;	private SessionContext ctx;&#13;&#10;&#13;&#10;	public void setSessionContext(SessionContext ctx) {&#13;&#10;		this.ctx= ctx;&#13;&#10;	}&#13;&#10;&#13;&#10;	public ... foo(....) {&#13;&#10;		Bank bank= new BankServiceLocator().getBank();&#13;&#10;		UserTransaction ut= ctx.getUserTransaction();&#13;&#10;		ut.begin();&#13;&#10;		try {&#13;&#10;			bank.credit(1001, 10);&#13;&#10;			bank.debit(1002, 10);&#13;&#10;		}&#13;&#10;		catch (Exception e) {&#13;&#10;			ut.rollback();&#13;&#10;		}&#13;&#10;		ut.commit();&#13;&#10;	}&#13;&#10;}&#13;&#10;&#13;&#10;"
v:shapes="_x0000_s1027"><![endif]><!--[if mso & !supportInlineShapes & supportFields]><v:shape
 id="_x0000_i1026" type="#_x0000_t75" style='width:363.1pt;height:325.5pt'>
 <v:imagedata croptop="-65520f" cropbottom="65520f"/>
</v:shape><span style='mso-element:field-end'></span><![endif]--></P>
<P class=MsoNormal>Notice that the component uses JTA to ensure atomicity of 
operations. At runtime however, the transaction context of the calling thread is 
propagated to the remote service using the web services coordination 
framework.</P>
<H2>Deliverables</H2>
<P class=MsoNormal>Mainly, the WS-TX project delivers a coordination service and 
a server runtime for using the web services coordination framework for 
distributed transaction management.</P>
<P class=MsoNormal>The coordination service comprise of following web 
services:</P>
<UL style="MARGIN-TOP: 0in" type=disc>
  <LI class=MsoNormal 
  style="mso-list: l5 level1 lfo2; tab-stops: list .5in">Activation service 
  (WS-Coordination) 
  <LI class=MsoNormal 
  style="mso-list: l5 level1 lfo2; tab-stops: list .5in">Registration service 
  (WS-Coordination) 
  <LI class=MsoNormal 
  style="mso-list: l5 level1 lfo2; tab-stops: list .5in">Completion service 
  (WS-<SPAN class=SpellE>AtomicTransaction</SPAN>) 
  <LI class=MsoNormal 
  style="mso-list: l5 level1 lfo2; tab-stops: list .5in">Coordinator service 
  (WS-<SPAN class=SpellE>AtomicTransaction</SPAN>) 
  <LI class=MsoNormal 
  style="mso-list: l5 level1 lfo2; tab-stops: list .5in">Completion service 
  (WS-<SPAN class=SpellE>AtomicTransaction</SPAN>) </LI></UL>
<P class=MsoNormal>The server runtime is capable of importing and exporting 
transactions to and from J2EE, in accordance with the coordination framework 
described by WS-Coordination and WS-<SPAN class=SpellE>AtomicTransaction</SPAN>. 
It also provides a participant service in accordance with WS-<SPAN 
class=SpellE>AtomicTransaction</SPAN>. As stated before, this allows J2EE web 
services and clients to take part in atomic transactions while using JTA for 
transaction management.</P>
<P class=MsoNormal>Additionally, WS-TX also includes a Transaction Manager 
modeled on <SPAN class=SpellE><SPAN class=PlainTextChar><SPAN 
style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">javax.transaction.TransactionManager</SPAN></SPAN></SPAN>, 
for use by standalone clients that need to coordinate activities using a 
coordination service. Note that this transaction manager cannot be used to 
perform any transactional work at the client end like JTA implementations sited 
elsewhere in this document. It merely provides a convenient API for standalone 
clients to use the coordination framework.</P>
<H2>Status</H2>
<P class=MsoNormal>Presently, the implementation only supports atomic 
transaction coordination type. Business activities will be supported in 
future.</P>
<P class=MsoNormal>The framework supports importing atomic transactions for J2EE 
web services, i.e. JSR109 (see <SPAN class=SpellE><SPAN 
class=PlainTextChar><SPAN 
style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">src/samples/interop</SPAN></SPAN></SPAN>). 
It also supports exporting transactions along web service calls made from J2EE 
by J2EE components like <SPAN class=SpellE>servlets</SPAN> and EJB s (see <SPAN 
class=SpellE><SPAN class=PlainTextChar><SPAN 
style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">src/samples/servlet</SPAN></SPAN></SPAN>).</P>
<P class=MsoNormal>So far the WS-TX runtime has been integrated with 2 JTA 
implementations, Java Open Transaction Manager (JOTM) from <SPAN 
class=SpellE>ObjectWeb</SPAN> and <SPAN class=SpellE>JBoss</SPAN> transaction 
manager from <SPAN class=SpellE>JBoss</SPAN>.</P>
<H2>Dependencies</H2>
<P class=MsoNormal>Even though in practice the WS-TX server runtime would be 
most likely used in conjunction with a J2EE server, in order to make the test 
cases as simple as possible, they have been designed to use Apache Tomcat <SPAN 
class=SpellE>servlet</SPAN> container instead.</P>
<P class=MsoNormal>To try out the test cases it is required to integrate at 
least one of the above mentioned JTA implementations with Tomcat. To be specific 
you may use either one of the following transaction managers:</P>
<UL style="MARGIN-TOP: 0in" type=disc>
  <LI class=MsoNormal 
  style="mso-list: l8 level1 lfo3; tab-stops: list .5in">JOTM version 1.4.3 or 
  later 
  <LI class=MsoNormal 
  style="mso-list: l8 level1 lfo3; tab-stops: list .5in"><SPAN 
  class=SpellE>JBoss</SPAN> transaction manager from JBoss-4.0.0RC1 or later 
  application server distribution. </LI></UL>
<H2>Using WS-TX with different JTA implementations</H2>
<P class=MsoNormal>WS-TX architecture has been designed so that it may be used 
with any JTA implementation provided that it implements the <SPAN 
class=PlainTextChar><SPAN 
style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">org.apache.ws.transaction.participant.j2ee.TransactionManagerGlue</SPAN></SPAN> 
interface. Two sample implementations of this interface for JOTM (version 1.4.3 
or later; version 1.5.3 is preferred but this implementation does not take 
advantage of <SPAN class=SpellE><SPAN class=PlainTextChar><SPAN 
style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">XATerminator</SPAN></SPAN></SPAN> 
provided in this later version of JOTM) and <SPAN class=SpellE>JBoss</SPAN> 
transaction manager (JBoss-4.0.0RC1 or later) have been provided under <SPAN 
class=PlainTextChar><SPAN 
style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%WS-TX_HOME%/</SPAN></SPAN>src/java/org/apache/ws/transaction/participant/j2ee.</P>
<P class=MsoNormal>In general given a transaction manager, the user should first 
determine whether it supports JCA 1.5 transaction inflow mechanism. If so, it is 
generally possible to come up with an implementation for the above interface. It 
may not be possible to do so otherwise.</P>
<P class=MsoNormal>Lastly, before the Maven build is done (see below), the <SPAN 
class=SpellE><SPAN class=PlainTextChar><SPAN 
style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">TransactionManagerGlueImpl</SPAN></SPAN></SPAN> 
property in <SPAN class=PlainTextChar><SPAN 
style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%WS-TX_HOME%/conf/<SPAN 
class=SpellE>jta.conf</SPAN> </SPAN></SPAN>must be set to the fully qualified 
class name of the class implementing <SPAN class=PlainTextChar><SPAN 
style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">org.apache.ws.transaction.participant.j2ee.TransactionManagerGlue</SPAN></SPAN> 
interface for the transaction manager used by the application server 
runtime.</P>
<H2>Running the provided samples</H2>
<H3>Setup the TCP Monitor</H3>
<P class=MsoNormal>All examples and WS-TX default endpoint configuration 
parameters given in <SPAN class=PlainTextChar><SPAN 
style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%WS-TX_HOME%/conf/<SPAN 
class=SpellE>endpoints.conf</SPAN></SPAN></SPAN> assume that you are using the 
TCP monitor to monitor and redirect soap messages sent to port 8081 on <SPAN 
class=SpellE>localhost</SPAN>, to port 8080.</P>
<H3>Configure Jakarta-Tomcat and deploy Axis</H3>
<OL style="MARGIN-TOP: 0in" type=1>
  <LI class=MsoNormal 
  style="mso-list: l2 level1 lfo4; tab-stops: list .5in">Install Jakarta-Tomcat. 
  The samples have been tested on Jakarta-Tomcat-5.0.25. 
  <LI class=MsoNormal 
  style="mso-list: l2 level1 lfo4; tab-stops: list .5in">Deploy Apache Axis. 
  Axis-1.2beta3 or later is required. </LI></OL>
<H3>Build and deploy WS-TX</H3>
<OL style="MARGIN-TOP: 0in" type=1>
  <LI class=MsoNormal 
  style="mso-list: l1 level1 lfo9; tab-stops: list .5in">Modify <SPAN 
  class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%WS-TX_HOME%/conf/<SPAN 
  class=SpellE>jta.conf</SPAN></SPAN></SPAN>. The <SPAN class=SpellE><SPAN 
  class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">TransactionManagerGlueImpl</SPAN></SPAN></SPAN> 
  property must be set to the fully qualified class name of the class 
  implementing <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">org.apache.ws.transaction.participant.j2ee.TransactionManagerGlue</SPAN></SPAN> 
  interface for the transaction manager that you plan to use. By default the 
  property is set to use the sample implementation for JOTM. 
  <LI class=MsoNormal style="mso-list: l1 level1 lfo9; tab-stops: list .5in">If 
  necessary, modify <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%WS-TX_HOME%/conf/<SPAN 
  class=SpellE>endpoints.conf</SPAN></SPAN></SPAN>. The properties declared here 
  configure the numerous endpoints of the coordination service and server 
  runtime. The default values provided assume that services are available at 
  <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">http://localhost:8081/axis/services/...</SPAN></SPAN> 
  If you use normal settings for Catalina and Axis, you do not need to modify 
  these properties. 
  <LI class=MsoNormal style="mso-list: l1 level1 lfo9; tab-stops: list .5in">To 
  build the <SPAN class=PlainTextChar><SPAN style2><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">kandula-0.1-SNAPSHOT.jar</SPAN></SPAN></SPAN>, 
  enter<BR clear=all><BR clear=all><SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">maven<BR clear=all><BR 
  clear=all></SPAN></SPAN>in <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%WS-TX_HOME%</SPAN></SPAN>. 

  <LI class=MsoNormal 
  style="mso-list: l1 level1 lfo9; tab-stops: list .5in">Copy the <SPAN 
  class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">j2ee.jar, <SPAN 
  class=SpellE>addressing.jar</SPAN></SPAN></SPAN> &amp;<SPAN 
  class=PlainTextChar><SPAN style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt"> 
  <SPAN class=SpellE>jotm</SPAN>-*.jar</SPAN></SPAN> files from <SPAN 
  class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%WS-TX_HOME%/target/lib</SPAN></SPAN><SPAN 
  class=plaintextcharstyle3> </SPAN>to <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%CATALINA_HOME%/shared/lib</SPAN></SPAN>. 

  <LI class=MsoNormal 
  style="mso-list: l1 level1 lfo9; tab-stops: list .5in">*Move* all Axis jars in 
  <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%CATALINA_HOME%/<SPAN 
  class=SpellE>webapps</SPAN>/axis/WEB-INF/lib</SPAN></SPAN> to <SPAN 
  class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%CATALINA_HOME%/shared/lib</SPAN></SPAN> 

  <LI class=MsoNormal 
  style="mso-list: l1 level1 lfo9; tab-stops: list .5in">Copy <SPAN 
  class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%WS-TX_HOME%/target/kandula-0.1-SNAPSHOT.jar</SPAN></SPAN> 
  to <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%CATALINA_HOME%/shared/lib</SPAN></SPAN>. 

  <LI class=MsoNormal style="mso-list: l1 level1 lfo9; tab-stops: list .5in">Use 
  the <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">server-<SPAN 
  class=SpellE>config.wsdd</SPAN></SPAN></SPAN> file provided in <SPAN 
  class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%WS-TX_HOME%/conf</SPAN></SPAN> 
  to deploy the services sited above. 
  <LI class=MsoNormal style="mso-list: l1 level1 lfo9; tab-stops: list .5in">Use 
  the <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">server-<SPAN 
  class=SpellE>config.wsdd</SPAN></SPAN></SPAN> file provided in <SPAN 
  class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%WS-TX_HOME%/conf</SPAN></SPAN> 
  to deploy WS-TX and WS-Addressing handlers. <BR clear=all>Note: WS-TX 
  implementation uses reference properties that must be configured with the 
  WS-Addressing handler as illustrated in the provided <SPAN 
  class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">server-<SPAN 
  class=SpellE>config.wsdd</SPAN></SPAN></SPAN> file. The global type mappings 
  provided in <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%WS-TX_HOME%/conf/server-<SPAN 
  class=SpellE>config.wsdd</SPAN></SPAN></SPAN> are used by the WS-Addressing 
  implementation and *must be* copied to the <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">server-<SPAN 
  class=SpellE>config.wsdd</SPAN></SPAN></SPAN>. 
  <LI class=MsoNormal 
  style="mso-list: l1 level1 lfo9; tab-stops: list .5in">Copy <SPAN 
  class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%WS-TX_HOME%/conf/client-<SPAN 
  class=SpellE>config.wsdd</SPAN></SPAN></SPAN> to <SPAN 
  class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%CATALINA_HOME%/<SPAN 
  class=SpellE>webapps</SPAN>/axis/WEB-INF/classes</SPAN></SPAN>. Modify the 
  <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">client-<SPAN 
  class=SpellE>config.wsdd</SPAN></SPAN></SPAN> copied to <SPAN 
  class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%CATALINA_HOME%/<SPAN 
  class=SpellE>webapps</SPAN>/axis/WEB-INF/classes</SPAN></SPAN> to deploy the 
  <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">org.apache.ws.transaction.participant.j2ee.handler.TransactionHandler</SPAN></SPAN> 
  on request flow. Also remove the <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">org.apache.ws.transaction.participant.standalone.handler.TransactionHandler</SPAN></SPAN> 
  used by standalone clients. The modified <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">client-<SPAN 
  class=SpellE>config.wsdd</SPAN></SPAN></SPAN> is shown below. </LI></OL>
<P class=StyleCentered><!--[if mso & !supportInlineShapes & supportFields]><span
style='mso-element:field-begin;mso-field-lock:yes'></span><span
style='mso-spacerun:yes'> </span>SHAPE <span
style='mso-spacerun:yes'> </span>\* MERGEFORMAT <span style='mso-element:field-separator'></span><![endif]--><!--[if gte vml 1]><v:shape 
id=_x0000_s1026 
style="WIDTH: 465pt; HEIGHT: 285.4pt; mso-position-horizontal-relative: char; mso-position-vertical-relative: line" 
type = "#_x0000_t202" coordsize = "21600,21600" filled = "f"><v:textbox 
style="MARGIN-TOP: 4.718pt; LEFT: auto; MARGIN-LEFT: 8.312pt; WIDTH: 449.875pt; TOP: auto; HEIGHT: 277.437pt"><![if !mso]>
<TABLE cellSpacing=0 cellPadding=0 width="100%">
  <TBODY>
  <TR>
    <TD><![endif]>
      <DIV>
      <P class=MsoPlainText>&lt;<SPAN class=GramE>deployment</SPAN> ...&gt;</P>
      <P class=MsoPlainText><SPAN 
      style="mso-spacerun: yes">&nbsp;</SPAN>&lt;<SPAN class=SpellE><SPAN 
      class=GramE>globalConfiguration</SPAN></SPAN>&gt;</P>
      <P class=MsoPlainText><SPAN 
      style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN>&lt;<SPAN class=SpellE><SPAN 
      class=GramE>requestFlow</SPAN></SPAN>&gt;</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN>&lt;handler type="java<SPAN 
      class=GramE>:org.apache.axis.message.addressing.handler.AddressingHandler</SPAN>" 
      /&gt;</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN>&lt;<SPAN class=GramE>handler</SPAN> 
      type="java:org.apache.ws.transaction.participant.j2ee.handler.TransactionHandler"/&gt;</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN>...</P>
      <P class=MsoPlainText><SPAN 
      style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN>&lt;/<SPAN class=SpellE>requestFlow</SPAN>&gt;</P>
      <P class=MsoPlainText><SPAN 
      style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN>&lt;<SPAN class=SpellE><SPAN 
      class=GramE>responseFlow</SPAN></SPAN>&gt;</P>
      <P class=MsoPlainText><SPAN 
      style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN><SPAN style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN>&lt;handler type="java<SPAN 
      class=GramE>:org.apache.axis.message.addressing.handler.AddressingHandler</SPAN>" 
      /&gt;</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 2">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN>...</P>
      <P class=MsoPlainText><SPAN 
      style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN>&lt;/<SPAN class=SpellE>responseFlow</SPAN>&gt;</P>
      <P class=MsoPlainText><SPAN 
      style="mso-tab-count: 1">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
      </SPAN>...</P>
      <P class=MsoPlainText><SPAN style="mso-spacerun: yes">&nbsp; 
      </SPAN>&lt;/<SPAN class=SpellE>globalConfiguration</SPAN>&gt;</P>
      <P class=MsoPlainText>...</P>
      <P 
  class=MsoPlainText>&lt;/deployment&gt;</P></DIV><![if !mso]></TD></TR></TBODY></TABLE><![endif]></v:textbox><w:wrap 
side = "left" type = "none"></w:wrap><w:anchorlock></w:anchorlock></v:shape><![endif]--><![if !vml]><img width=626 height=387
src="user-guide1_files/image003.gif"
alt="Text Box: &lt;deployment ...&gt;&#13;&#10; &lt;globalConfiguration&gt;&#13;&#10;        &lt;requestFlow&gt;&#13;&#10;		&lt;handler type=&quot;java:org.apache.axis.message.addressing.handler.AddressingHandler&quot; /&gt;&#13;&#10;		&lt;handler type=&quot;java:org.apache.ws.transaction.participant.j2ee.handler.TransactionHandler&quot;/&gt;&#13;&#10;		...&#13;&#10;        &lt;/requestFlow&gt;&#13;&#10;        &lt;responseFlow&gt;&#13;&#10;        	&lt;handler type=&quot;java:org.apache.axis.message.addressing.handler.AddressingHandler&quot; /&gt;&#13;&#10;		...&#13;&#10;        &lt;/responseFlow&gt;&#13;&#10;	...&#13;&#10;  &lt;/globalConfiguration&gt;&#13;&#10;...&#13;&#10;&lt;/deployment&gt;&#13;&#10;"
v:shapes="_x0000_s1026"><![endif]><!--[if mso & !supportInlineShapes & supportFields]><v:shape
 id="_x0000_i1027" type="#_x0000_t75" style='width:465pt;height:285.4pt'>
 <v:imagedata croptop="-65520f" cropbottom="65520f"/>
</v:shape><span style='mso-element:field-end'></span><![endif]--></P>
<H3>Build the samples</H3>
<OL style="MARGIN-TOP: 0in" type=1>
  <LI class=MsoNormal style="mso-list: l6 level1 lfo6; tab-stops: list .5in">To 
  build the sample(s) enter,<BR clear=all><BR clear=all><SPAN 
  class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">ant dist<BR clear=all><BR 
  clear=all></SPAN></SPAN>in <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%WS-TX_HOME%/<SPAN 
  class=SpellE>src</SPAN>/samples</SPAN></SPAN> </LI></OL>
<H3>Run the <SPAN class=SpellE>Interop</SPAN> sample</H3>
<P class=MsoNormal>This sample shows how a standalone client may access a 
transactional web service. To try it out,</P>
<OL style="MARGIN-TOP: 0in" type=1>
  <LI class=MsoNormal 
  style="mso-list: l3 level1 lfo7; tab-stops: list .5in">Copy the <SPAN 
  class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%WS-TX_HOME%/<SPAN 
  class=SpellE>src/samples/interop/build/interop.jar</SPAN></SPAN></SPAN> to 
  <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%CATALINA_HOME%/<SPAN 
  class=SpellE>webapps</SPAN>/axis/WEB-INF/lib</SPAN></SPAN> 
  <LI class=MsoNormal style="mso-list: l3 level1 lfo7; tab-stops: list .5in">Use 
  the <SPAN class=SpellE><SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">deploy.wsdd</SPAN></SPAN></SPAN> 
  in <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%WS-TX_HOME%/<SPAN 
  class=SpellE>src/samples/interop</SPAN></SPAN></SPAN> to deploy the service in 
  Axis. 
  <LI class=MsoNormal style="mso-list: l3 level1 lfo7; tab-stops: list .5in">Run 
  the provided <SPAN class=SpellE>JUnit</SPAN> test cases by entering,<BR 
  clear=all><BR clear=all><SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">ant test<BR clear=all><BR 
  clear=all></SPAN></SPAN>in <SPAN class=PlainTextChar><SPAN 
  style="FONT-SIZE: 9pt; mso-bidi-font-size: 12.0pt">%WS-TX_HOME%/<SPAN 
  class=SpellE>src/samples/interop</SPAN></SPAN></SPAN> 
</LI></OL></DIV></BODY></HTML>
